{"version":3,"sources":["Api.js","Pages/HomePage.js","Pages/StockPage.js","StockIcon.png","App.js","reportWebVitals.js","index.js"],"names":["API_URL","API_KEY","Link","props","_jsx","MaterialUILink","component","RouterLink","to","children","getMatchingStocks","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","symbol","wrap","_context","prev","next","axios","get","concat","abrupt","sent","data","stop","_x","apply","arguments","getStock","_ref2","_callee2","_context2","_x2","getStockQuota","_ref3","_callee3","_context3","_x3","getMultipleStockQuotas","_ref4","_callee4","symbols","_context4","join","_x4","getStockNews","_ref6","_callee6","_context6","_x6","getStockRating","_ref7","_callee7","_context7","_x7","getTrendingStocks","_ref8","_callee8","_context8","getStockHistory","_ref9","_callee9","_context9","_x8","cutLongText","text","maxLength","slice","homeStockSymbols","fmtCmpt","Intl","NumberFormat","notation","fmtComma","numCmptFormat","value","num","parseFloat","toFixed","Math","abs","format","numCommaFormat","ratingColors","textRating","toLowerCase","change2Percent","price","changeDollarAmount","TableCell","withStyles","root","MuiTableCell","TableOfTrendingStocks","_useQuery","useQuery","stocks","isLoading","error","CircularProgress","Alert","severity","TableContainer","_jsxs","Table","size","TableHead","TableRow","className","align","TableBody","map","name","change","avgVolume","marketCap","dayHigh","dayLow","scope","src","alt","HomePage","StockChart","logo","companyName","changes","_useQuery2","stockHistorical","Object","keys","length","hasOwnProperty","stockTitleProps","percentChange","StockTitle","_objectSpread","wantedDataFormat","historical","stock","Date","parse","date","close","reverse","numberFormat","style","currency","chartConfig","yAxis","offset","labels","formatter","this","x","color","position","xAxis","lineColor","tickColor","tooltip","shared","y","plotOptions","series","showInNavigator","gapSize","chart","height","credits","enabled","rangeSelector","buttons","type","count","selected","valueDecimals","ReactHighcharts","config","About","description","ceo","fullTimeEmployees","city","ipoDate","exchange","country","mktCap","volAvg","sector","_useState","useState","_useState2","_slicedToArray","expand","setExpand","_useQuery3","stockQuota","console","log","yearHigh","yearLow","ReadMore","isExpanded","more","less","onClick","moment","News","_useQuery4","news","singleNews","SingleNews","_ref5","image","title","site","publishedDate","url","href","target","rel","Ratings","_useQuery5","stockRating","ratingDetailsDCFRecommendation","ratingDetailsROERecommendation","ratingDetailsROARecommendation","ratingDetailsDERecommendation","ratingDetailsPERecommendation","ratingDetailsPBRecommendation","TrendingStocks","_useQuery6","trendingStocks","trendingStock","TrendingStock","ticker","changesPercentage","background","includes","formattedChangesPercentage","startsWith","StockPage","match","params","id","useStyles","makeStyles","theme","paper","border","backgroundColor","fontSize","NavBar","classes","history","useHistory","setText","stockNames","Logo","Autocomplete","autoComplete","width","inputValue","noOptionsText","onInputChange","evt","input","options","onChange","option","push","getOptionLabel","renderInput","ref","InputProps","borderRadius","padding","inputProps","placeholder","App","Switch","Route","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.8b1f6989.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { Link as MaterialUILink } from '@material-ui/core'\r\n\r\nexport const API_URL = 'https://financialmodelingprep.com'\r\nexport const API_KEY = '493ccb87fb242d4be9448548654bf037'\r\n\r\n// to=\"/characters\", Having '/' in the beginning replaces whole pathname else adds to pathname\r\nexport const Link = (props) => <MaterialUILink component={RouterLink} to={props.to}>{props.children}</MaterialUILink>\r\n\r\nexport const getMatchingStocks = async (symbol) => (await axios.get(`${API_URL}/api/v3/search?query=${symbol}&limit=10&apikey=${API_KEY}`)).data\r\nexport const getStock = async (symbol) => (await axios.get(`${API_URL}/api/v3/profile/${symbol}?apikey=${API_KEY}`)).data[0]\r\nexport const getStockQuota = async (symbol) => (await axios.get(`${API_URL}/api/v3/quote/${symbol}?apikey=${API_KEY}`)).data[0]\r\nexport const getMultipleStockQuotas = async (symbols) => (await axios.get(`${API_URL}/api/v3/quote/${symbols.join(\",\")}?apikey=${API_KEY}`)).data\r\nexport const getMultipleStocks = async (symbols) => (await axios.get(`${API_URL}/api/v3/profile/${symbols.join(\",\")}?apikey=${API_KEY}`)).data\r\nexport const getStockNews = async (symbol) => (await axios.get(`${API_URL}/api/v3/stock_news?tickers=${symbol}&limit=4&apikey=${API_KEY}`)).data\r\nexport const getStockRating = async (symbol) => (await axios.get(`${API_URL}/api/v3/rating/${symbol}?apikey=${API_KEY}`)).data[0]\r\nexport const getTrendingStocks = async () => (await axios.get(`${API_URL}/api/v3/actives?apikey=${API_KEY}`)).data\r\nexport const getStockHistory = async (symbol) => (await axios.get(`${API_URL}/api/v3/historical-price-full/${symbol}?apikey=${API_KEY}`)).data\r\n\r\nexport const cutLongText = (text, maxLength) => text <= maxLength ? text : `${text.slice(0, maxLength)}...`\r\nexport const homeStockSymbols = ['TSLA', 'AAPL', 'MSFT', 'GOOG', 'FB', 'GME', 'JPM', 'BABA',' WMT',\r\n 'NVDA', 'V', 'NFLX', 'NKE', 'ADBE', 'KO', 'CSCO', 'MCD', 'UPS', 'ABNB', 'HD']\r\n\r\nconst fmtCmpt = Intl.NumberFormat(\"en\", { notation: \"compact\" });\r\nconst fmtComma = Intl.NumberFormat(\"en\", { notation: \"standard\" });\r\n\r\nexport function numCmptFormat(value) {\r\n  const num = parseFloat(value).toFixed(2);\r\n  return Math.abs(num) >= 1000 ? fmtCmpt.format(num) : num\r\n}\r\n\r\nexport function numCommaFormat(value) {\r\n  const num = parseFloat(value).toFixed(2);\r\n  return fmtComma.format(num)\r\n}\r\n\r\nexport function ratingColors(textRating) {\r\n  switch (textRating.toLowerCase()) {\r\n    case 'strong buy': return 'text-green-400'\r\n    case 'buy': return 'text-green-500'\r\n    case 'neutral': return 'text-gray-400'\r\n    case 'sell': return 'text-gray-500'\r\n    case 'strong sell': return 'text-red-400'\r\n    default: return 'text-gray-400'\r\n  }\r\n}\r\n\r\nexport const change2Percent = (price, changeDollarAmount) => ((price / (price - changeDollarAmount) - 1) * 100).toFixed(2)\r\n\r\n// Solves most of your date problems -> Date.parse(\"2021-02-19\")","import { getMultipleStockQuotas, numCmptFormat, homeStockSymbols, Link, change2Percent, numCommaFormat, getStock } from '../Api'\r\nimport { useQuery, useQueries } from 'react-query'\r\nimport { CircularProgress, Table, TableBody, TableCell as MuiTableCell , TableContainer, TableHead, TableRow, withStyles} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst HomePage = () => {\r\n  return <div className='mb-4 mx-2'>\r\n    <h1 className='my-7 ml-7 text-5xl font-bold text-green-500'>\r\n      <span className=\"text-white\">Stock</span> Screener\r\n    </h1>\r\n    {/* <Footer /> */}\r\n    <TableOfTrendingStocks />\r\n  </div>\r\n}\r\n\r\nconst TableCell = withStyles({\r\n  root: { \r\n    'border-bottom': '1px solid #374151'\r\n  }\r\n})(MuiTableCell);\r\n\r\nconst TableOfTrendingStocks = () => {\r\n  // console.log(\"homeStockSymbols: \", homeStockSymbols)\r\n  const { data: stocks, isLoading, error } = useQuery(`${homeStockSymbols.join(\" \")}`, () => getMultipleStockQuotas(homeStockSymbols))\r\n  // const { data: stocks, isLoading, error } = useQueries(homeStockSymbols.map(symbol => ({ queryKey: `HomeStocks: ${symbol}`, queryFn: () => getStock(symbol)}) ))\r\n  // const stocksFetched = useQueries(homeStockSymbols.map(symbol => ({ queryKey: `HomeStocks: ${symbol}`, queryFn: () => getStock(symbol)}) ))\r\n  // console.log(\"Stocks\", wat)\r\n  // for (let stockFetched in stocksFetched) {\r\n  //   const { data: stock, isLoading, error } = stockFetched;\r\n    if (isLoading) return <CircularProgress />\r\n    if (error) return <Alert severity=\"error\">Unable to get stock data after 3 attempts...</Alert>\r\n  // }\r\n\r\n  // return\r\n\r\n\r\n  // homeStockSymbols.map(({ data: stocks, isLoading, error }) => {\r\n\r\n  // })\r\n  // if (isLoading) return <CircularProgress />\r\n  // if (error) return <Alert severity=\"error\">Unable to get stock data after 3 attempts...</Alert>\r\n  // return <div></div>\r\n\r\n  return <div>\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead >\r\n          <TableRow>\r\n            <TableCell className='border-solid border border-gray-700 font-serif'>\r\n            <span className=\"font-bold text-gray-100 text-md tracking-wider font-serif\">TICKER</span>\r\n            </TableCell>\r\n            <TableCell align=\"right\" className='border-solid border border-gray-700'>\r\n              <span className=\"font-bold text-gray-100 text-md tracking-wide font-serif\">PRICE</span>\r\n            </TableCell>\r\n            <TableCell align=\"right\" className='border-solid border border-gray-700'>\r\n              <span className=\"font-bold text-gray-100 text-md tracking-wide font-serif\">CHG %</span>\r\n            </TableCell>\r\n            <TableCell align=\"right\" className='border-solid border border-gray-700'>\r\n              <span className=\"font-bold text-gray-100 text-md tracking-wide font-serif\">VOL</span>\r\n            </TableCell>\r\n            <TableCell align=\"right\" className='border-solid border border-gray-700'>\r\n              <span className=\"font-bold text-gray-100 text-md tracking-wide font-serif\">MKT Cap</span>\r\n            </TableCell>\r\n            <TableCell align=\"right\" className='border-solid border border-gray-700'>\r\n              <span className=\"font-bold text-gray-100 text-md tracking-wide  font-serif\">DAY LOWEST</span>\r\n            </TableCell>\r\n            <TableCell align=\"right\" className='border-solid border border-gray-700'>\r\n              <span className=\"font-bold text-gray-100 text-md tracking-wide font-serif\">DAY HIGHEST</span>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {stocks.map(({ symbol, name, price, change, avgVolume, marketCap, dayHigh, dayLow }) =>\r\n            <TableRow key={symbol}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <div className=\"flex\">\r\n                  <img src={`https://financialmodelingprep.com/image-stock/${symbol}.png`} alt={symbol + 'logo'} className=\"h-8 mr-2\"/>\r\n                  <div className=\"\">\r\n                    <Link to={`/stock-screener/profile/${symbol}`}>\r\n                      <span className='block leading-3 text-blue-400 font-semibold'>{symbol}</span>\r\n                    </Link>\r\n                    <span className=\"text-gray-400\">{name}</span>\r\n                  </div>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <span className=\"font-semibold text-gray-200 font-mono\">{price ? '$'+numCommaFormat(price) : '—'}</span>\r\n                </TableCell>\r\n              <TableCell align=\"right\">\r\n                <span className={`${ change >= 0 ? 'text-green-800 bg-green-300' : 'text-red-900 bg-red-200'} rounded-full px-3 py-1 font-sans`}>{change ? change2Percent(price, change)+'%' : '—'}</span>\r\n                </TableCell>\r\n              <TableCell align=\"right\">\r\n                <span className=\"font-semibold text-gray-200 font-mono\">{avgVolume ? '$'+numCmptFormat(avgVolume) : '—'}</span>\r\n                </TableCell>\r\n              <TableCell align=\"right\">\r\n                <span className=\"font-semibold text-gray-200 font-mono\">{marketCap ? numCmptFormat(marketCap) : '—'}</span>\r\n                </TableCell>\r\n              <TableCell align=\"right\">\r\n                <span className=\"font-semibold text-gray-200 font-sans\">{dayLow ? '$'+numCommaFormat(dayLow) : '—'}</span>\r\n                </TableCell>\r\n              <TableCell align=\"right\">\r\n                <span className=\"font-semibold text-gray-200 font-sans\">{dayHigh ? '$'+numCommaFormat(dayHigh) : '—'}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  </div>\r\n}\r\n\r\nexport default HomePage","import { format } from \"date-fns\";\r\nimport { useState } from 'react';\r\nimport { useQuery } from 'react-query'\r\nimport moment from 'moment'\r\nimport { getStock, getStockQuota, getStockNews, getStockRating, getTrendingStocks, cutLongText, getStockHistory, numCmptFormat, ratingColors, Link, change2Percent, numCommaFormat } from '../Api'\r\nimport ReactHighcharts from 'react-highcharts/ReactHighstock.src'\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nfunction StockPage(props) {\r\n  const { id: symbol } = props.match.params\r\n  const { data: stock, isLoading, error } = useQuery(`${symbol} Profile`, () => getStock(symbol))\r\n  if (isLoading) return <CircularProgress />\r\n  if (error || !stock || Object.keys(stock).length === 0) return <Alert severity=\"error\">Unable to get stock data after 3 attempts or malformatted Stock Data...</Alert>\r\n  \r\n  const { image: logo, price, companyName, changes } = stock\r\n  return <div className='mx-4 mb-4 text-white'>\r\n    <StockChart logo={logo} price={price} symbol={symbol} companyName={companyName} changes={changes} />\r\n    <About {...stock} />\r\n    <News symbol={symbol} />\r\n    <Ratings symbol={symbol} />\r\n    <TrendingStocks />\r\n  </div>\r\n}\r\n\r\nfunction StockChart({ symbol, logo, price, companyName, changes }) {\r\n  const { data: stockHistorical, isLoading, error } = useQuery(`${symbol} Historical`, () => getStockHistory(symbol))\r\n  if (isLoading) return <CircularProgress />\r\n  if (error || !stockHistorical || stockHistorical[0] || Object.keys(stockHistorical).length === 0 || stockHistorical.hasOwnProperty(\"Error Message\")) \r\n      return <Alert severity=\"error\">Unable to get stock data after 3 attempts or malformatted Stock Data...</Alert>\r\n  const percentChange = change2Percent(price, changes);\r\n  const stockTitleProps = { percentChange, logo, companyName, symbol, price }\r\n  if (!stockHistorical || Object.keys(stockHistorical).length === 0) return <StockTitle {...stockTitleProps} />\r\n\r\n  const wantedDataFormat = stockHistorical.historical.map(stock => [Date.parse(stock.date), stock.close]).reverse()\r\n  const options = { style: \"currency\", currency: \"USD\" };\r\n  const numberFormat = new Intl.NumberFormat(\"en-US\", options);\r\n  const chartConfig = {\r\n    yAxis: [\r\n      {\r\n        offset: 20,\r\n        labels: {\r\n          formatter: function () {\r\n            return numberFormat.format(this.value);\r\n          },\r\n          x: -15,\r\n          style: {\r\n            color: \"#ccc\",\r\n            position: \"absolute\"\r\n          },\r\n          align: \"left\"\r\n        }\r\n      }\r\n    ],\r\n    xAxis: [\r\n      {\r\n        lineColor: '#404246',\r\n        tickColor: '#404246',\r\n        labels: {\r\n          style: {\r\n            color: \"#ccc\",\r\n          },\r\n        }\r\n      }\r\n    ],\r\n    tooltip: {\r\n      shared: true,\r\n      formatter: function () {\r\n        return (\r\n          numberFormat.format(this.y, 0) +\r\n          \"</b><br/>\" +\r\n          format(this.x, \"MMMM dd yyyy\")\r\n        );\r\n      }\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        showInNavigator: true,\r\n        gapSize: 6\r\n      }\r\n    },\r\n    chart: {\r\n      height: 600\r\n    },\r\n    credits: {\r\n      enabled: false\r\n    },\r\n    rangeSelector: {\r\n      buttons: [\r\n        {\r\n          type: \"month\",\r\n          count: 3,\r\n          text: \"3m\"\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 6,\r\n          text: \"6m\"\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 9,\r\n          text: \"9m\"\r\n        },\r\n        {\r\n          type: \"month\",\r\n          count: 12,\r\n          text: \"1yr\"\r\n        },\r\n        {\r\n          type: \"all\",\r\n          text: \"All\"\r\n        }\r\n      ],\r\n      selected: 1\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Price\",\r\n        type: \"spline\",\r\n\r\n        data: wantedDataFormat,\r\n        tooltip: {\r\n          valueDecimals: 2\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return <div>\r\n    <StockTitle {...stockTitleProps} />\r\n    <ReactHighcharts config={chartConfig}></ReactHighcharts>\r\n  </div>\r\n}\r\n\r\nconst StockTitle = ({ percentChange, logo, companyName, symbol, price }) => \r\n  <div className=\"flex justify-between\">\r\n    <div className='flex'>\r\n      <img className='w-16 p-auto m-auto inline-block rounded-md mr-2 mb-2' src={logo} alt='' />\r\n      <div className=\"\">\r\n        <h1 className='text-lg font-bold text-gray-100 tracking-wide leading-8 md:text-4xl'>{symbol}</h1>\r\n        <h1 className='text-blue-100 text-base mb-1 md:text-2x1'>{companyName}</h1>\r\n      </div>\r\n    </div>\r\n    <div className=\"mr-2 grid sm:flex items-center\">\r\n      <h1 className='inline-block text-xl font-bold text-gray-100 tracking-wide ml-1 md:text-4xl'>${numCommaFormat(price)}</h1>\r\n      <h1 className={`${percentChange >= 0 ? 'text-green-400' : 'text-red-400'} inline-block mr-2 text-base font-bold text-gray-100 tracking-wide ml-1 md:text-3xl`}>({percentChange >= 0 ? '+' + percentChange : percentChange }% today)</h1>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\nfunction About({ description, ceo, fullTimeEmployees, city, ipoDate, exchange, country, mktCap, volAvg, symbol, sector, companyName }) {\r\n  const [expand, setExpand] = useState(false);\r\n  const { data: stockQuota, isLoading, error } = useQuery(`${symbol} Quota`, () => getStockQuota(symbol));\r\n  if (isLoading) return <CircularProgress />\r\n  if (error || !stockQuota || stockQuota[0] || Object.keys(stockQuota).length === 0 || stockQuota.hasOwnProperty(\"Error Message\")) \r\n      return <Alert severity=\"error\">Unable to get stock data after 3 attempts or malformatted Stock Data...</Alert>\r\n  \r\n  console.log(\"stockQuota: \", stockQuota)\r\n  const { dayLow, dayHigh, yearHigh, yearLow } = stockQuota;\r\n  return <div className=\"\">\r\n    <h2 className='mt-5 mb-1 text-3xl font-bold text-gray-100 tracking-wide ml-1'>About</h2>\r\n    <hr className='border-gray-500 mb-2' />\r\n    {description && <ReadMore \r\n      isExpanded={expand}\r\n      more={<p className='mb-5 text-blue-100'>{description}</p>}\r\n      less={<p className='mb-5 text-blue-100'>{cutLongText(description, 300)}<span className='text-green-500 hover:text-green-200 underline cursor-pointer' onClick={() => setExpand(true)}>Show More</span></p>}\r\n    />}\r\n    <div className=\"grid gap-6 grid-cols-3 sm:grid-cols-5\">\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>CEO</h3>\r\n        <p className=\"text-blue-100\">{ceo || '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Country</h3>\r\n        <p className=\"text-blue-100\">{country || '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wide leading-4 mt-3'>Year High</h3>\r\n        <p className=\"text-blue-100\">{yearHigh ? '$' + numCmptFormat(yearHigh) : '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>Employees</h3>\r\n        <p className=\"text-blue-100\">{fullTimeEmployees ? numCmptFormat(fullTimeEmployees) : '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Market Cap</h3>\r\n        <p className=\"text-blue-100\">{mktCap ? '$' + numCmptFormat(mktCap) : '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Year Low</h3>\r\n        <p className=\"text-blue-100\">{yearLow ? '$' + numCmptFormat(yearLow) : '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>Headquarters</h3>\r\n        <p className=\"text-blue-100\">{city || '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Average Volume</h3>\r\n        <p className=\"text-blue-100\">{volAvg ? '$' + numCmptFormat(volAvg) : '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Day High</h3>\r\n        <p className=\"text-blue-100\">{dayHigh ? '$' + numCmptFormat(dayHigh) : '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>IPO Date</h3>\r\n        <p className=\"text-blue-100\">{ipoDate ? moment(ipoDate).format(\"MMMM Do YYYY\") : '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Symbol</h3>\r\n        <p className=\"text-blue-100\">{symbol || '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Day Low</h3>\r\n        <p className=\"text-blue-100\">{dayLow ? '$' + numCmptFormat(dayLow) : '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>Exchange</h3>\r\n        <p className=\"text-blue-100\">{exchange || '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Sector</h3>\r\n        <p className=\"text-blue-100\">{sector || '—'}</p>\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4 mt-3'>Company Name</h3>\r\n        <p className=\"text-blue-100\">{companyName || '—'}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\nfunction News({ symbol }) {\r\n  const { data: news, isLoading, error } = useQuery(`${symbol} News`, () => getStockNews(symbol))\r\n  console.log(\"news: \", news)\r\n  if (isLoading) return <CircularProgress />\r\n  if (error || !news || Object.keys(news).length === 0 || news.hasOwnProperty(\"Error Message\")) \r\n      return <Alert severity=\"error\">Unable to get stock data after 3 attempts or malformatted Stock Data...</Alert>\r\n\r\n  return <div className=''>\r\n    <h2 className='mt-5 mb-1 text-3xl font-bold text-gray-100 tracking-wide ml-1'>News</h2>\r\n    <hr className='border-gray-500 mb-2' />\r\n    <div className=\"grid gap-6 grid-cols-0 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4\">\r\n      {news.map(singleNews => <SingleNews key={singleNews.text} {...singleNews} />)}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nfunction SingleNews({ image, title, site, publishedDate, url, text, symbol }) {\r\n  return <a className='flex' href={url} title={title} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    <div>\r\n      <p className='mb-1'>\r\n        <span className='text-gray-100 text-base font-semibold tracking-wider leading-4'>{site}</span>\r\n        {' - '}{moment(publishedDate).format(\"MMMM Do YYYY\")}</p>\r\n      <h1 className='text-gray-100 text-lg font-semibold tracking-wide leading-5 mb-1'>{cutLongText(title, 30)}</h1>\r\n      <p className='text-blue-100'>{cutLongText(text, 100)}</p>\r\n    </div>\r\n    <div>\r\n      <img className='w-max mt-5' src={image} alt={`${site} news on ${symbol}`}/>\r\n    </div>\r\n  </a>\r\n}\r\n\r\nfunction Ratings({ symbol }) {\r\n  const { data: stockRating, isLoading, error } = useQuery(`${symbol} Rating`, () => getStockRating(symbol))\r\n  if (isLoading) return <CircularProgress />\r\n  if (error || !stockRating || stockRating[0] || Object.keys(stockRating).length === 0 || stockRating.hasOwnProperty(\"Error Message\")) \r\n    return <Alert severity=\"error\">Unable to get stock ratings after 3 attempts...</Alert>\r\n\r\n    console.log(\"stockRating: \", stockRating)\r\n  const {\r\n    ratingDetailsDCFRecommendation, ratingDetailsROERecommendation,\r\n    ratingDetailsROARecommendation, ratingDetailsDERecommendation,\r\n    ratingDetailsPERecommendation, ratingDetailsPBRecommendation\r\n  } = stockRating;\r\n\r\n  return <div className=\"mt-2\">\r\n    <h2 className='mb-1 text-3xl font-bold text-gray-100 tracking-wide ml-1'>Ratings</h2>\r\n    <hr className='border-gray-500 mb-3' />\r\n    <div className=\"grid gap-6 grid-cols-3 sm:grid-cols-6\">\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>DFC</h3>\r\n        <p className={`text-lg ${ratingColors(ratingDetailsDCFRecommendation)}`}>{ratingDetailsDCFRecommendation || '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>ROE</h3>\r\n        <p className={`text-lg ${ratingColors(ratingDetailsROERecommendation)}`}>{ratingDetailsROERecommendation || '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>ROA</h3>\r\n        <p className={`text-lg ${ratingColors(ratingDetailsROARecommendation)}`}>{ratingDetailsROARecommendation || '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>DER</h3>\r\n        <p className={`text-lg ${ratingColors(ratingDetailsDERecommendation)}`}>{ratingDetailsDERecommendation || '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>PER</h3>\r\n        <p className={`text-lg ${ratingColors(ratingDetailsPERecommendation)}`}>{ratingDetailsPERecommendation || '—'}</p>\r\n      </div>\r\n      <div className=\"\">\r\n        <h3 className='text-gray-100 text-lg font-semibold tracking-wider leading-4'>PBR</h3>\r\n        <p className={`text-lg ${ratingColors(ratingDetailsPBRecommendation)}`}>{ratingDetailsPBRecommendation || '—'}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nfunction TrendingStocks() {\r\n  const { data: trendingStocks, isLoading, error } = useQuery('Trending Stocks', getTrendingStocks)\r\n  if (isLoading) return <CircularProgress />\r\n  if (error || !trendingStocks || Object.keys(trendingStocks).length === 0 || trendingStocks.hasOwnProperty(\"Error Message\")) \r\n    return <Alert severity=\"error\">Unable to get stock ratings after 3 attempts...</Alert>\r\n\r\n  return <div className='mt-2'>\r\n    <h2 className='mt-5 mb-1 text-3xl font-bold text-gray-100 tracking-wide ml-1'>Trending Stocks</h2>\r\n    <hr className='border-gray-500 mb-3' />\r\n    <div className=\"grid gap-5 grid-cols-3 sm:grid-cols-6 md:grid-cols-6 lg:grid-cols-9  xl:grid-cols-13 \">\r\n      {trendingStocks.slice(0, 18).map(trendingStock => <TrendingStock key={trendingStock.ticker} {...trendingStock} />)}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst TrendingStock = ({ ticker, price, companyName, changesPercentage }) => {\r\n  return <Link to={`profile/${ticker}`}>\r\n    <div className='pl-2 py-1 text-white rounded-sm border-gray-700 border' style={{ background: '#131515'}}>\r\n      <h2 className='font-semibold tracking-wide leading-4'>{companyName ? cutLongText(companyName, 20) : '—'}</h2>\r\n      <h1>{price ? '$'+numCmptFormat(price) : '—'}</h1>\r\n      <h3 className={`${changesPercentage.includes('-') ? 'text-red-400' : 'text-green-400'}`}>{formattedChangesPercentage(changesPercentage)}</h3>\r\n    </div>\r\n  </Link>\r\n}\r\n\r\nfunction ReadMore({ isExpanded, more, less }) {\r\n  return isExpanded ? more : less\r\n}\r\n\r\nfunction formattedChangesPercentage(changesPercentage) {\r\n  if (!changesPercentage) return \"—\";\r\n  return changesPercentage.startsWith(\"-\") ? `${numCommaFormat(changesPercentage)}%` : `+${numCommaFormat(changesPercentage)}%`\r\n}\r\n\r\nexport default StockPage","export default __webpack_public_path__ + \"static/media/StockIcon.80a0346b.png\";","import { useState } from 'react';\nimport HomePage from './Pages/HomePage';\nimport StockPage from './Pages/StockPage';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { Alert, Autocomplete } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/core';\nimport { useQuery } from 'react-query'\nimport { Link, getMatchingStocks } from './Api'\nimport Logo from './StockIcon.png'\n\nconst App = () => {\n  return <div className=\"App min-h-screen\">\n    <NavBar />\n    <Switch>\n      <Route path='/stock-screener/profile/:id' exact component={StockPage} />\n      <Route path='/stock-screener' exact component={HomePage} />\n    </Switch>\n  </div>;\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    border: \"5px solid rgb(25, 26, 26)\",\n    backgroundColor: \"#1d1e1e\",\n    color: \"white\",\n    fontSize: '16px'\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const history = useHistory()\n  const [text, setText] = useState('')\n  const { data: stockNames, error } = useQuery(`${text}`, () => getMatchingStocks(text))\n  if (error) return <Alert severity=\"error\">Unable to get stock data after 3 attempts...</Alert>\n  return <div className=\"flex pt-1 pb-1 mb-4\">\n    <Link to='/stock-screener' className='inline-block'>\n      <img className='inline-block rounded-md w-14 pl-1 ml-1 mr-3' src={Logo} alt=''/>\n    </Link>\n    <Autocomplete\n      autoComplete\n      style={{ width: '100%', color:'white'}}\n      classes={classes}\n      inputValue={text}\n      noOptionsText={null}\n      onInputChange={(evt, input) => setText(input)}\n      options={stockNames || []}\n      onChange={(evt, option) => option && history.push(`stock-screener/profile/${option.symbol}`)} // Runs when you pick an option OR after an option has been picked and text is deleted\n      getOptionLabel={(option) => `${option.symbol} - ${option.name || ''}` }\n      renderInput={(params) =>\n        <div className='pr-2 pt-1' ref={params.InputProps.ref}>\n          <input style={{ borderRadius: '9px', padding: '10px', width: '100%', background: '#1d1e1e', color: 'white' }}\n            {...params.inputProps} placeholder=\"Search Stocks\" />\n        </div>\n      }\n    />\n  </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nexport const queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}